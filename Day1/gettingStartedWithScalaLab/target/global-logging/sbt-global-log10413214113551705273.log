[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\wilfred.abruquah\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\wilfred.abruquah\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 18.0.2.1)
[debug]       Load.loadUnit: plugins took 102.5667ms
[debug]       Load.loadUnit: defsScala took 0.4772ms
[debug] [Loading] Scanning directory C:\Users\wilfred.abruquah\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\wilfred.abruquah\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 25.1619 ms
[debug]           Load.resolveProject(global-plugins) took 53.5782ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\wilfred.abruquah\.sbt\1.0\plugins, plugins: List(<none>))) took 107.899ms
[debug] [Loading] Done in C:\Users\wilfred.abruquah\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 142.5336ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2412ms
[debug]     Load.loadUnit(file:/C:/Users/wilfred.abruquah/.sbt/1.0/plugins/, ...) took 260.0826ms
[debug]   Load.apply: load took 640.2621ms
[debug]   Load.apply: resolveProjects took 8.5373ms
[debug]   Load.apply: finalTransforms took 114.1358ms
[debug]   Load.apply: config.delegates took 12.4618ms
[debug]   Load.apply: Def.make(settings)... took 875.0988ms
[debug]   Load.apply: structureIndex took 250.2003ms
[debug]   Load.apply: mkStreams took 2.3556ms
[info] loading global plugins from C:\Users\wilfred.abruquah\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4051.4198ms
[debug]           Load.loadUnit: plugins took 35.3252ms
[debug]           Load.loadUnit: defsScala took 0.0114ms
[debug] [Loading] Scanning directory C:\Users\wilfred.abruquah\ScalaProjects\Day1\gettingStartedWithScalaLab\project
[debug]             Load.loadUnit: mkEval took 10.6025ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\wilfred.abruquah\ScalaProjects\Day1\gettingStartedWithScalaLab\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.2409 ms
[info] loading settings for project gettingstartedwithscalalab-build from idea.sbt ...
[debug]               Load.resolveProject(gettingstartedwithscalalab-build) took 5.0141ms
[debug]             Load.loadTransitive: finalizeProject(Project(id gettingstartedwithscalalab-build, base: C:\Users\wilfred.abruquah\ScalaProjects\Day1\gettingStartedWithScalaLab\project, plugins: List(<none>))) took 11.2793ms
[debug] [Loading] Done in C:\Users\wilfred.abruquah\ScalaProjects\Day1\gettingStartedWithScalaLab\project, returning: (gettingstartedwithscalalab-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4614.7542ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.5848ms
[debug]         Load.loadUnit(file:/C:/Users/wilfred.abruquah/ScalaProjects/Day1/gettingStartedWithScalaLab/project/, ...) took 4659.2996ms
[debug]       Load.apply: load took 4662.2484ms
[debug]       Load.apply: resolveProjects took 0.209ms
[debug]       Load.apply: finalTransforms took 23.3255ms
[debug]       Load.apply: config.delegates took 0.7108ms
[debug]       Load.apply: Def.make(settings)... took 366.7765ms
[debug]       Load.apply: structureIndex took 97.0238ms
[debug]       Load.apply: mkStreams took 0.0044ms
[info] loading project definition from C:\Users\wilfred.abruquah\ScalaProjects\Day1\gettingStartedWithScalaLab\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 9483.0601ms
[debug]     Load.loadUnit: defsScala took 0.0053ms
[debug] [Loading] Scanning directory C:\Users\wilfred.abruquah\ScalaProjects\Day1\gettingStartedWithScalaLab
[debug]       Load.loadUnit: mkEval took 0.4778ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.691 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 62.3951ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\wilfred.abruquah\ScalaProjects\Day1\gettingStartedWithScalaLab, plugins: List(<none>))) took 68.6349ms
[debug] [Loading] Done in C:\Users\wilfred.abruquah\ScalaProjects\Day1\gettingStartedWithScalaLab, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1864.2816ms
[debug]     Load.loadUnit: cleanEvalClasses took 24.3098ms
[debug]   Load.loadUnit(file:/C:/Users/wilfred.abruquah/ScalaProjects/Day1/gettingStartedWithScalaLab/, ...) took 11373.1039ms
[debug] Load.apply: load took 11377.324ms
[debug] Load.apply: resolveProjects took 0.1623ms
[debug] Load.apply: finalTransforms took 56.4956ms
[debug] Load.apply: config.delegates took 0.4794ms
[debug] Load.apply: Def.make(settings)... took 176.7062ms
[debug] Load.apply: structureIndex took 86.0974ms
[debug] Load.apply: mkStreams took 0.0115ms
[info] set current project to gettingStartedWithScala (in build file:/C:/Users/wilfred.abruquah/ScalaProjects/Day1/gettingStartedWithScalaLab/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 64515 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 64515, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to gettingStartedWithScala (in build file:/C:/Users/wilfred.abruquah/ScalaProjects/Day1/gettingStartedWithScalaLab/)
[debug] > Exec(idea-shell, None, None)
